This section describes routine management operations, including updating your MongoDB deployment's configuration.
本节介绍例行管理操作，包括更新MongoDB部署的配置。

Run-time Database Configuration运行时数据库配置
Outlines common MongoDB configurations and examples of best-practice configurations for common use cases.
概述了常见的MongoDB配置和常见用例的最佳实践配置示例。

Upgrade to the Latest Revision of MongoDB
Introduces the basic process for upgrading a MongoDB deployment between different minor release versions.
介绍在不同的次要版本之间升级MongoDB部署的基本流程。

Manage mongod Processes
Start, configure, and manage running mongod process.
启动、配置和管理正在运行的mongod进程。  

Terminate Running Operations终止运行操作
Stop in progress MongoDB client operations using db.killOp() and maxTimeMS().
使用db.killOp()和maxTimeMS()停止正在进行的MongoDB客户端操作。

Rotate Log Files旋转日志文件
Archive the current log files and start new ones.归档当前日志文件并启动新的日志文件。

Run-time Database Configuration
The command line and configuration file interfaces provide MongoDB administrators with a large number of options and settings for controlling the operation of the database system. This document provides an overview of common configurations and examples of best-practice configurations for common use cases.
命令行和配置文件接口为MongoDB管理员提供了大量用于控制数据库系统操作的选项和设置。本文档概述了常见配置和常见使用情形的最佳实践配置示例。
While both interfaces provide access to the same collection of options and settings, this document primarily uses the configuration file interface.
虽然这两个接口都提供了对相同选项和设置集合的访问，但本文档主要使用配置文件接口。

If you installed MongoDB with a package manager such as yum or apt on Linux or brew on macOS, or with the MSI installer on Windows, a default configuration file has been provided as part of your installation:
如果您在Linux上使用yum或apt等包管理器安装MongoDB，或在macOS上使用酿造，或在Windows上使用MSI安装程序安装MongoDB，则在安装过程中提供了默认配置文件：
Linux
apt, yum, or zypper Package Manager
/etc/mongod.conf
If you installed MongoDB via a downloaded TGZ or ZIP file, you will need to create your own configuration file. The basic example configuration is a good place to start.
如果您通过下载的TGZ或ZIP文件安装了MongoDB，则需要创建自己的配置文件。基本的示例配置是一个很好的起点。

For package installations of MongoDB on Linux or macOS, an initialization script which uses this default configuration file is also provided. This initialization script can be used to start the mongod on these platforms in the following manner:
对于Linux或macOS上的MongoDB软件包安装，还提供了使用此默认配置文件的初始化脚本。此初始化脚本可用于在这些平台上以以下方式启动mongod：
On Linux systems that use the systemd init system (the systemctl command):
在使用systemd init系统（systemctl命令）的Linux系统上：
sudo systemctl start mongod
On Linux systems that use the SystemV init init system (the service command):
sudo service mongod start

If you installed MongoDB using a TGZ or ZIP file, you will need to create your own configuration file. A basic example configuration can be found later in this document. Once you have created a configuration file, you can start a MongoDB instance with this configuration file by using either the --config or -f options to mongod. For example, on Linux:
如果您使用TGZ或ZIP文件安装了MongoDB，则需要创建自己的配置文件。基本配置示例可在本文档后面找到。创建配置文件后，您可以通过使用--config或-f选项来启动具有此配置文件的MongoDB实例。例如，在Linux上：
mongod --config /etc/mongod.conf
mongod -f /etc/mongod.conf

Modify the values in the mongod.conf file on your system to control the configuration of your database instance.
修改系统上的mongod.conf文件中的值，以控制数据库实例的配置。

Configure the Database
Consider the following basic configuration:
processManagement:
   fork: true
net:
   bindIp: localhost
   port: 27017
storage:
   dbPath: /var/lib/mongo
systemLog:
   destination: file
   path: "/var/log/mongodb/mongod.log"
   logAppend: true
storage:
   journal:
      enabled: true
      
For most standalone servers, this is a sufficient base configuration. It makes several assumptions, but consider the following explanation:
对于大多数独立服务器，这是一个足够的基本配置。它提出了几个假设，但请考虑以下解释：
    fork is true, which enables a daemon mode for mongod, which detaches (i.e. "forks") the MongoDB from the current session and allows you to run the database as a conventional server.
    fork为true，它为mongod启用了守护程序模式，该模式将MongoDB从当前会话中分离（即“forks”），并允许您将数据库作为传统服务器运行。
    bindIp is localhost, which forces the server to only listen for requests on the localhost IP. Only bind to secure interfaces that the application-level systems can access with access control provided by system network filtering (i.e. "firewall").
    bindIp是localhost，它强制服务器只侦听localhost IP上的请求。仅绑定到应用程序级系统可以通过系统网络过滤（即“防火墙”）提供的访问控制访问的安全接口。
    port is 27017, which is the default MongoDB port for database instances. MongoDB can bind to any port. You can also filter access based on port using network filtering tools.
    端口为27017，这是数据库实例的默认MongoDB端口。MongoDB可以绑定到任何端口。您还可以使用网络过滤工具根据端口过滤访问。
    quiet is true. This disables all but the most critical entries in output/log file, and is not recommended for production systems. If you do set this option, you can use setParameter to modify this setting during run time.
    quiet is true. 这将禁用输出/日志文件中除最关键的条目外的所有条目，不建议用于生产系统。如果您确实设置了此选项，则可以在运行时使用setParameter修改此设置。
    dbPath is /var/lib/mongo, which specifies where MongoDB will store its data files.
    dbPath为/var/lib/mongo，它指定MongoDB将存储其数据文件的位置。
    
    
Security Considerations
The following configuration options are useful for limiting access to a mongod instance:
以下配置选项对于限制对mongod实例的访问非常有用：
net:
   bindIp: localhost,10.8.0.10,192.168.4.24,/tmp/mongod.sock
security:
   authorization: enabled

net.bindIp
This example provides four values to the bindIp option:此示例为bindIp选项提供了四个值：

localhost, the localhost interface;
10.8.0.10, a private IP address typically used for local networks and VPN interfaces;
192.168.4.24, a private network interface typically used for local networks; and
/tmp/mongod.sock, a Unix domain socket path. /tmp/mongod.sock,Unix域套接字路径。

Because production MongoDB instances need to be accessible from multiple database servers, it is important to bind MongoDB to multiple interfaces that are accessible from your application servers. At the same time it's important to limit these interfaces to interfaces controlled and protected at the network layer.
由于生产MongoDB实例需要从多个数据库服务器访问，因此将MongoDB绑定到多个可从应用程序服务器访问的接口非常重要。同时，重要的是将这些接口限制在网络层控制和保护的接口上。

security.authorization
    Setting this option to true enables the authorization system within MongoDB. If enabled you will need to log in by connecting over the localhost interface for the first time to create user credentials.
    将此选项设置为true将启用MongoDB中的授权系统。如果启用，则需要首次通过localhost接口连接登录以创建用户凭据。
    
  Sharding Configuration
  Sharding requires mongod instances with different mongod configurations for the config servers and the shards. The config servers store the cluster's metadata, while the shards store the data.
  分片需要配置服务器和分片的mongod实例具有不同的mongod配置。配置服务器存储群集的元数据，而分片存储数据。
  
  To configure the config server mongod instances, in the configuration file, specify configsvr for the sharding.clusterRole setting.
  要配置config server mongod实例，请在配置文件中指定sharding.clusterRole设置的configsvr。
  
  Changed in version 3.4: Starting in version 3.4, MongoDB removes support for mirrored config servers and config servers must be deployed as a replica set.
sharding:
    clusterRole: configsvr
net:
    bindIp: 10.8.0.12
    port: 27001
replication:
    replSetName: csRS
    
    
To deploy config servers as a replica set, the config servers must run the WiredTiger Storage Engine. Initiate the replica set and add members.
要将配置服务器部署为副本集，配置服务器必须运行WiredTiger存储引擎。启动副本集并添加成员。

To configure the shard mongod instances, specify shardsvr for the sharding.clusterRole setting, and if running as a replica set, the replica set name:
要配置shard mongod实例，请为sharding.clusterRole设置指定shardsvr，如果作为副本集运行，则副本集名称：

sharding:
   clusterRole: shardsvr
replication:
   replSetName: shardA
   
If running as a replica set, initiate the shard replica set and add members.
如果作为副本集运行，请启动分片副本集并添加成员。

For the router (i.e. mongos), configure at least one mongos process with the following setting:
对于路由器（即mongos），至少配置一个mongos进程，设置如下：
sharding:
   configDB: csRS/10.8.0.12:27001
   
You can specify additional members of the config server replica set by specifying hostnames and ports in the form of a comma separated list after the replica set name.
您可以通过在副本集名称后面以逗号分隔列表的形式指定主机名和端口来指定配置服务器副本集的其他成员。

Run Multiple Database Instances on the Same System
在同一系统上运行多个数据库实例
In many cases running multiple instances of mongod on a single system is not recommended. On some types of deployments [2] and for testing purposes you may need to run more than one mongod on a single system.
在许多情况下，不建议在单个系统上运行多个mongod实例。在某些类型的部署【2】上，出于测试目的，您可能需要在单个系统上运行多个mongod。
In these cases, use a base configuration for each instance, but consider the following configuration values:
在这些情况下，请为每个实例使用基本配置，但请考虑以下配置值：
storage:
   dbPath: /var/lib/mongo/db0/
processManagement:
   pidFilePath: /var/lib/mongo/db0.pid
   
The dbPath value controls the location of the mongod instance's data directory. Ensure that each database has a distinct and well labeled data directory. The pidFilePath controls where mongod process places it's process id (PID) file. As this tracks the specific mongod file, it is crucial that file be unique and well labeled to make it easy to start and stop these processes.
dbPath值控制mongod实例数据目录的位置。确保每个数据库都有一个不同的、标记良好的数据目录。pidFilePath控制mongod进程将其进程id (PID)文件放置在哪里。由于这跟踪特定的mongod文件，文件必须是唯一的和良好的标签，以使启动和停止这些进程变得容易。

Diagnostic Configurations诊断配置





   







