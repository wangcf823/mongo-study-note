In sharded clusters, you can create zones that represent a group of shards and associate one or more ranges of shard key values to that zone. MongoDB routes reads and writes that fall into a zone range only to those shards inside of the zone.
在分片群集中，您可以创建表示一组分片的区域，并将一个或多个分片键值范围关联到该区域。MongoDB将属于区域范围的读写路由到区域内的那些分片。

Add Shards to a Zone
Associate a Zone with a particular shard using the sh.addShardToZone() method when connected to a mongos instance. A single shard may have multiple zones, and multiple shards may also have the same zone.
当连接到mongos实例时，使用sh.addShardToZone()方法将Zone与特定分片关联。单个分片可以有多个区域，多个分片也可以有相同的区域。
EXAMPLE
  The following example adds the zone NYC to two shards, and the zones SFO and NRT to a third shard:
  以下示例将区域纽约添加到两个分片中，将区域SFO和NRT添加到第三个分片中：
  sh.addShardToZone("shard0000", "NYC")
  sh.addShardToZone("shard0001", "NYC")
  sh.addShardToZone("shard0002", "SFO")
  sh.addShardToZone("shard0002", "NRT")
You may remove zone from a particular shard using the sh.removeShardFromZone() method when connected to a mongos instance, as in the following example, which removes the NRT zone from a shard:
当连接到mongos实例时，您可以使用sh.remoShardFromZone()方法从特定分片中删除区域，如以下示例所示，该方法将从分片中删除NRT区域：
sh.removeShardFromZone("shard0002", "NRT")

Create a Zone Range
To define the zone's range of shard keys, use the sh.updateZoneKeyRange() method when connected to a mongos instance. Any given shard key range may only have one assigned zone. You cannot overlap defined ranges.
要定义区域的分片键范围，请在连接到mongos实例时使用sh.updateZoneKeyRange()方法。任何给定的分片键范围只能有一个分配的区域。您不能重叠定义的范围。
EXAMPLE
  Given a collection named users in the records database, sharded by the zipcode field. The following operations assign:
  two ranges of zip codes in Manhattan and Brooklyn the NYC zone
  one range of zip codes in San Francisco the SFO zone
  sh.updateZoneKeyRange("records.users", { zipcode: "10001" }, { zipcode: "10281" }, "NYC")
  sh.updateZoneKeyRange("records.users", { zipcode: "11201" }, { zipcode: "11240" }, "NYC")
  sh.updateZoneKeyRange("records.users", { zipcode: "94102" }, { zipcode: "94135" }, "SFO")

NOTE
  Zone ranges are always inclusive of the lower boundary and exclusive of the upper boundary.
  Starting in MongoDB 4.0.2, dropping a collection deletes its associated zone/tag ranges.

Remove a Zone Range
New in version 3.4: Use the shell helper method sh.removeRangeFromZone() to remove a range from a zone.
EXAMPLE
  The following example removes the NYC zone assignment for the range of zip codes within Manhattan:
  sh.removeRangeFromZone("records.user", {zipcode: "10001"}, {zipcode: "10281"})
    
View Existing Zones
Use sh.status() to list the zones associated to each shard in the cluster. You can also view a shards zones by querying the shards collection in the config database.
使用sh.status()列出与集群中每个分片关联的区域。您也可以通过在config数据库中查询分片集合来查看分片区域。
The following example uses the find() method to return all shards with the NYC zone.
以下示例使用find()方法返回具有纽约区域的所有分片。
use config
db.shards.find({ tags: "NYC" })
You can find zone ranges for all namespaces in the tags collection of the config database. The output of sh.status() also displays all zone ranges.
您可以在config数据库的标记集合中找到所有命名空间的区域范围。sh.status()的输出还显示所有区域范围。
The following example uses the find() method to return any range associated to the NYC zone.
以下示例使用find()方法返回与纽约区域关联的任何范围。
use config
db.tags.find({ tag: "NYC" })










